<!-- Load processing nodelets for the depth camera -->
<launch>

  <arg name="manager" />
  <arg name="occupancy_xyz" default="true" />
  <arg name="rectify" default="true" />
  <arg name="respawn" default="false" />
  <arg     if="$(arg respawn)" name="bond" value="" />
  <arg unless="$(arg respawn)" name="bond" value="--no-bond" />
  <arg name="depth" />

  <!-- Rectified raw image (internal use) -->
  <node if="$(arg rectify)" pkg="nodelet" type="nodelet" name="$(arg depth)_rectify_depth"
        args="load image_proc/rectify $(arg manager) $(arg bond)"
        respawn="$(arg respawn)">
    <remap from="image_mono"  to="$(arg depth)/image_raw" />
    <remap from="image_rect"  to="$(arg depth)/image_rect_raw" />
    <!-- Use nearest neighbor (0) interpolation so we don't streak across
         depth boundaries -->
    <param name="interpolation" value="0" />
  </node>


  <!-- XYZ point cloud (optional, disable if publishing XYZRGB instead) -->
  <node if="$(arg occupancy_xyz)"
        pkg="nodelet" type="nodelet" name="$(arg depth)_points"
        args="load xiaoqiang_depth_image_proc/occupancy_xyz $(arg manager) $(arg bond)"
        respawn="$(arg respawn)">
    <remap from="image_rect" to="$(arg depth)/image_rect_raw"/>  <!-- Use raw image for efficiency -->
    <remap from="points"     to="$(arg depth)/points" />
    <rosparam command="load" file="$(find xiaoqiang_depth_image_proc)/occupancy_xyz.yaml"/>
  </node>

</launch>
